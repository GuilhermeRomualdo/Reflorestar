/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.ConexaoMySQL;
import view.JFProprietarios;
import data.ProdutoData;
import data.SituacaoData;
import javax.swing.JOptionPane;
import Model.Produto;
import Model.Situacao;
import Model.Pessoas;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author MAQLAB
 */
public class JIFPropriedades extends javax.swing.JInternalFrame {

    public Produto obj = new Produto();
//    JFProprietarios objProp = new JFProprietarios();
   JFPropriedades objPropriedades = new JFPropriedades();
    ConexaoMySQL objCon = new ConexaoMySQL();
    ProdutoData objProd_data = new ProdutoData();
    JFPrincipal objprincipal = new JFPrincipal();
    
    String SQL;
    
    int area_total_int;
    int area_plantada_int;
    int benfeitoria_int;
    String estado_Str;
    int manancial_int;
    float preco_refl;
    public int editProp;
    public boolean simManancial = false;
    boolean bool;
    boolean editing = false; //booleano usado para compreender se quando clicar em salvar, é uma edição (update) ou criação (insert)
    
    public JIFPropriedades() {
        initComponents();
        jbEditar.setEnabled(true);
        jbExcluir.setEnabled(true);
        jbCancelar.setEnabled(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("bd_reflorestar?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        bdProprietariosQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT b FROM BdProprietarios b");
        bdProprietariosList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : bdProprietariosQuery.getResultList();
        bdProprietariosQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT b FROM BdProprietarios b");
        bdProprietariosList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : bdProprietariosQuery1.getResultList();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jbEditar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jlEstoque = new javax.swing.JLabel();
        jlId2 = new javax.swing.JLabel();
        jlId = new javax.swing.JLabel();
        jbExcluir = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jtDescricao = new javax.swing.JTextField();
        jlDescricao = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        endereco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        municipio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        estado = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cep = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        complemento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        latitude = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        longitude = new javax.swing.JTextField();
        divisa = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nirf = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        area_total = new javax.swing.JTextField();
        largura_manancial = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        area_plantada = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        benfeitoria = new javax.swing.JTextField();
        jftEstoque = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        sim_manancial = new javax.swing.JRadioButton();
        nao_manancial = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro de Propriedade");

        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jlEstoque.setText("Proprietário:");

        jlId2.setText("0");
        jlId2.setToolTipText("");

        jlId.setText("Codigo:");

        jbExcluir.setText("Excluir");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jlDescricao.setText("Descrição");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Localização "));

        jLabel1.setText("Endereço:");

        jLabel2.setText("Municipio:");

        jLabel4.setText("Estado:");

        jLabel10.setText("CEP:");

        cep.setText(" ");
        cep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cepActionPerformed(evt);
            }
        });

        jLabel11.setText("Complemento:");

        jLabel3.setText("Latitude:");

        jLabel12.setText("Longitude:");

        jLabel13.setText("Divisa:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cep, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(complemento))
                            .addComponent(endereco)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(latitude, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(longitude)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(divisa, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(endereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(complemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(municipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(latitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(longitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(divisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel5.setText("Nirf:");

        jLabel6.setText("Area Tota ha:");
        jLabel6.setToolTipText("");

        jLabel8.setText("Area plantada ha:");

        jLabel9.setText("Benfeitoria ha:");

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, bdProprietariosList, jftEstoque);
        bindingGroup.addBinding(jComboBoxBinding);

        jftEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftEstoqueActionPerformed(evt);
            }
        });

        jLabel14.setText("Manancial:");

        sim_manancial.setText("Sim");
        sim_manancial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sim_manancialActionPerformed(evt);
            }
        });

        nao_manancial.setText("Não");
        nao_manancial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nao_manancialActionPerformed(evt);
            }
        });

        jLabel15.setText("Largura do Manancial:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlEstoque)
                                    .addComponent(jlId))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(area_total, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(area_plantada, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sim_manancial)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nao_manancial)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(largura_manancial, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(benfeitoria, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlId2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jftEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(nirf, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jlDescricao)
                                                .addGap(18, 18, 18)
                                                .addComponent(jtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlId)
                    .addComponent(jlId2)
                    .addComponent(jtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlDescricao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlEstoque)
                    .addComponent(jLabel5)
                    .addComponent(nirf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(area_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(area_plantada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(benfeitoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14)
                    .addComponent(sim_manancial)
                    .addComponent(nao_manancial)
                    .addComponent(largura_manancial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbExcluir)
                        .addComponent(jbEditar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbNovo)
                        .addComponent(jbSalvar)
                        .addComponent(jbCancelar)))
                .addGap(21, 21, 21))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        limparCampos();
        tratarCampos(true);
        editing = false;
        jbNovo.setEnabled(false);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        sim_manancial.setEnabled(true);
        nao_manancial.setEnabled(true);
        
        objCon.openConnectionMySql();
         try {
            objCon.stmt = objCon.con.createStatement();
            SQL = "SELECT codigo FROM bd_jifpropriedades";
            objCon.rs = objCon.stmt.executeQuery(SQL);
            objCon.rs.last();
           
            jlId2.setText(String.valueOf(objCon.rs.getInt("codigo")+1));
            
         }catch(SQLException ex) {
             Logger.getLogger(JIFPropriedades.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro");
         } finally {
            objCon.closeConnectionMySql(objCon.con, objCon.stmt);
        }
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        if(JOptionPane.showConfirmDialog(this, 
            "Deseja realmente cancelar?", 
            "Confirmação", JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE)==
                JOptionPane.YES_OPTION){
            limparCampos();
            tratarCampos(false);
            jbNovo.setEnabled(true);
            jbSalvar.setEnabled(false);
            jbCancelar.setEnabled(false);
            jbEditar.setEnabled(true);
        }
    }//GEN-LAST:event_jbCancelarActionPerformed

    private String getSelectedName(int index) {
        String SQL_;
        String nome_prop = null;
        //objCon.openConnectionMySql();
        try {
            objCon.stmt = objCon.con.createStatement();
            SQL_ = "SELECT * FROM bd_proprietarios WHERE ID_proprietario ="+(index+1)+";";
            objCon.rs = objCon.stmt.executeQuery(SQL_);
            while ( objCon.rs.next()) {
                nome_prop = objCon.rs.getString("Nome_proprietario");
            }
            //objCon.closeConnectionMySql(objCon.con, objCon.stmt);
            return nome_prop;
        } catch (SQLException ex) {
            Logger.getLogger(JIFPropriedades.class.getName()).log(Level.SEVERE, null, ex);
            return  null;
        }
    }
    
    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
           
        obj.setEstado(String.valueOf(estado.getText()));
        obj.setArea_total(Integer.parseInt(area_total.getText()));
        obj.setBenfeitoria(Integer.parseInt(benfeitoria.getText()));
        obj.setArea_plantada(Integer.parseInt(area_plantada.getText()));
        
        try {
            objCon.openConnectionMySql();
            objCon.stmt = objCon.con.createStatement();
            //Seleciona a tabela desejada

            //se editing = true, ou seja, é um caso de UPDATE, entra neste if
            if(editing) {
                                 
                    preco_refl = objProd_data.calculaProduto(Integer.parseInt(area_total.getText()), Integer.parseInt(area_plantada.getText()), 
                            Integer.parseInt(benfeitoria.getText()), obj.getEstado());

                    if(sim_manancial.isEnabled()) {
                        if(obj.getLargura_manancial() < 10) {
                            preco_refl = preco_refl + objProd_data.calculaProduto(30, 0, 0, obj.getEstado());
                        } else if(obj.getLargura_manancial() >10 && obj.getLargura_manancial() < 50) {
                            preco_refl = preco_refl + objProd_data.calculaProduto(50, 0, 0, obj.getEstado());
                        } else if(obj.getLargura_manancial() > 50 && obj.getLargura_manancial() < 200) {
                            preco_refl = preco_refl + objProd_data.calculaProduto(100, 0, 0, obj.getEstado());
                        } else if(obj.getLargura_manancial() > 200 && obj.getLargura_manancial() < 600) {
                            preco_refl = preco_refl + objProd_data.calculaProduto(200, 0, 0, obj.getEstado());
                        } else if(obj.getLargura_manancial() > 600) {
                            preco_refl = preco_refl + objProd_data.calculaProduto(500, 0, 0, obj.getEstado());
                        }        
                    }
                    
                //update statement a fim de atualizar a coluna
              SQL = "UPDATE bd_jifpropriedades SET "
                        + "descricao ='"+String.valueOf(jtDescricao.getText())+"', "
                        + "proprietario ='"+String.valueOf(getSelectedName(jftEstoque.getSelectedIndex()))+"', "
                        + "nirf ="+Integer.parseInt(nirf.getText())+", "
                        + "area_total ="+Integer.parseInt(area_total.getText())+", "
                        + "largura_manancial ="+Integer.parseInt(largura_manancial.getText())+", "
                        + "area_plantada ="+Integer.parseInt(area_plantada.getText())+", "
                        + "benfeitoria ="+Integer.parseInt(benfeitoria.getText())+", "
                        + " endereco ='"+String.valueOf(endereco.getText())+"', "
                        + "CEP ="+Integer.parseInt(cep.getText())+", "
                        + "complemento ='"+String.valueOf(complemento.getText())+"', "
                        + "preco_refl ="+preco_refl+" " 
                        + " WHERE codigo = "+editProp+";";

            } else {
                    if(sim_manancial.isEnabled()) {
                        //sets 
                         obj.setEstado(String.valueOf(estado.getText()));
                         obj.setArea_total(Integer.parseInt(area_total.getText()));
                         obj.setBenfeitoria(Integer.parseInt(benfeitoria.getText()));
                         obj.setArea_plantada(Integer.parseInt(area_plantada.getText()));
                         obj.setLargura_manancial(Integer.parseInt(largura_manancial.getText()));

                         //calcula o preço de reflorestamento
                         preco_refl = objProd_data.calculaProduto(obj.getArea_total(), obj.getArea_plantada(), obj.getBenfeitoria(), obj.getEstado());

                         area_total_int = obj.getArea_total();
                         area_plantada_int = obj.getArea_plantada();
                         benfeitoria_int = obj.getBenfeitoria();
                         manancial_int = obj.getLargura_manancial();
                         obj.setSim_manancial(true);
                         /*obj.sim_manancial = true;
                         simManancial = obj.sim_manancial; */
                         //tratamento do preço de reflorestamento juntamente com a marginal  de mananciais
                         if(obj.getLargura_manancial() < 10) {
                             preco_refl = preco_refl + objProd_data.calculaProduto(30, 0, 0, obj.getEstado());
                         } else if(obj.getLargura_manancial() >10 && obj.getLargura_manancial() < 50) {
                             preco_refl = preco_refl + objProd_data.calculaProduto(50, 0, 0, obj.getEstado());
                         } else if(obj.getLargura_manancial() > 50 && obj.getLargura_manancial() < 200) {
                             preco_refl = preco_refl + objProd_data.calculaProduto(100, 0, 0, obj.getEstado());
                         } else if(obj.getLargura_manancial() > 200 && obj.getLargura_manancial() < 600) {
                             preco_refl = preco_refl + objProd_data.calculaProduto(200, 0, 0, obj.getEstado());
                         } else if(obj.getLargura_manancial() > 600) {
                             preco_refl = preco_refl + objProd_data.calculaProduto(500, 0, 0, obj.getEstado());
                         }
                        /* obj.sim_manancial = false;
                         simManancial = obj.sim_manancial; */
                         obj.setSim_manancial(false);
                        SQL = "INSERT INTO bd_jifpropriedades"
                             + " VALUES ("+Integer.parseInt(jlId2.getText())+", '"+String.valueOf(jtDescricao.getText())+"', '"
                             + String.valueOf(getSelectedName(jftEstoque.getSelectedIndex()))+"', "+Integer.parseInt(nirf.getText())+", "
                             + Integer.parseInt(area_total.getText())+", 'sim', "+Integer.parseInt(largura_manancial.getText())+", "
                             + Integer.parseInt(area_plantada.getText())+", "+Integer.parseInt(benfeitoria.getText())+", '"
                             +String.valueOf(endereco.getText())+"', "+Integer.parseInt(cep.getText())+", '"
                             +String.valueOf( complemento.getText())+"', '"+String.valueOf(municipio.getText())+"', '"
                             + String.valueOf(estado.getText())+"', "+Integer.parseInt(latitude.getText())+", "
                             +Integer.parseInt(longitude.getText())+", '"+String.valueOf(divisa.getText())+"', '"+obj.getTipo_arvore()+"', "+preco_refl+" )";

                    } else {

                                       //sets 
                         obj.setEstado(String.valueOf(estado.getText()));
                         obj.setArea_total(Integer.parseInt(area_total.getText()));
                         obj.setBenfeitoria(Integer.parseInt(benfeitoria.getText()));
                         obj.setArea_plantada(Integer.parseInt(area_plantada.getText()));

                         //calcula o preço de reflorestamento
                         preco_refl = objProd_data.calculaProduto(obj.getArea_total(), obj.getArea_plantada(), obj.getBenfeitoria(), obj.getEstado());

                         area_total_int = obj.getArea_total();
                         area_plantada_int = obj.getArea_plantada();
                         benfeitoria_int = obj.getBenfeitoria();

                         SQL = "INSERT INTO bd_jifpropriedades"
                             + " VALUES ("+Integer.parseInt(jlId2.getText())+", '"+String.valueOf(jtDescricao.getText())+"', '"
                             + String.valueOf(getSelectedName(jftEstoque.getSelectedIndex()))+"', '"+Integer.parseInt(nirf.getText())+"', "
                             + Integer.parseInt(area_total.getText())+",'nao', 0, "
                             + Integer.parseInt(area_plantada.getText())+", '"+Integer.parseInt(benfeitoria.getText())+"', '"
                             + String.valueOf(endereco.getText())+"', "+Integer.parseInt(cep.getText())+", '"
                             + String.valueOf( complemento.getText())+"', '"+String.valueOf(municipio.getText())+"', '"
                             + String.valueOf(estado.getText())+"', "+Integer.parseInt(latitude.getText())+", "
                             + Integer.parseInt( longitude.getText())+", '"+String.valueOf(divisa.getText())+"', '"+obj.getTipo_arvore()+"', "+preco_refl+" )";
                    }
            }
            objCon.stmt.executeUpdate(SQL);
            //Seleciona a primeira linha do banco
            
            JOptionPane.showMessageDialog(null, "Propriedade Inserida com Sucesso");
                    limparCampos();
                    tratarCampos(false);
                    jbNovo.setEnabled(true);
                   jbSalvar.setEnabled(false);
                   jbCancelar.setEnabled(false);
                   editing = false;
                    
        } catch (SQLException ex) {
            Logger.getLogger(JIFPropriedades.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Propriedade Não Foi Inserida Corretamente");
        } catch (IOException ex) {
            Logger.getLogger(JIFPropriedades.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            objCon.closeConnectionMySql(objCon.con, objCon.stmt);
        }
        
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
            editing = true;
            objPropriedades.showJFPropriedades(this);
    }//GEN-LAST:event_jbEditarActionPerformed

    /*private int setIndexSelectedByName(String name) {
        int value = 0;
        Statement stmt_local;
        ResultSet rs_local;
        try {
            stmt_local = objCon.con.createStatement();
            SQL = "SELECT ID_proprietario FROM bd_proprietarios WHERE Nome_proprietario = '"+name+"';";
            rs_local = stmt_local.executeQuery(SQL);
            while (rs_local.next())
                value = rs_local.getInt(1);
            return value;
        } catch (SQLException ex) {
            Logger.getLogger(JIFPropriedades.class.getName()).log(Level.SEVERE, null, ex);
            return 0;
        }      
    }*/
    
    public void jbActionEditar() {
        
        editProp = objPropriedades.getRow();
        jbSalvar.setEnabled(true);
        
        try {
            objCon.openConnectionMySql();
            objCon.stmt = objCon.con.createStatement();
            
            SQL = "SELECT * FROM bd_jifpropriedades WHERE codigo = "+(editProp+1);
            
            objCon.rs = objCon.stmt.executeQuery(SQL);
            //Seleciona a primeira linha do banco

            while(objCon.rs.next()) {
                //setando o texto para edição em todos os campos
                 jlId2.setText(objCon.rs.getString("codigo"));
                // id_iteracao = Integer.parseInt(objCon.rs.getString("codigo"));
                 jtDescricao.setText(objCon.rs.getString("descricao"));
                // jftEstoque.setSelectedItem(setIndexSelectedByName(objCon.rs.getString("proprietario")));
                 nirf.setText(objCon.rs.getString("nirf"));
                 area_total.setText(objCon.rs.getString("area_total"));
                 
                 if(objCon.rs.getString("bool_manancial").equals("sim"))
                    sim_manancial.setEnabled(false);
                 else
                     nao_manancial.setEnabled(false);
                 
                 largura_manancial.setText(objCon.rs.getString("largura_manancial"));
                 area_plantada.setText(objCon.rs.getString("area_plantada"));
                 benfeitoria.setText(objCon.rs.getString("benfeitoria"));
                 endereco.setText(objCon.rs.getString("endereco"));
                 cep.setText(objCon.rs.getString("CEP"));
                 complemento.setText(objCon.rs.getString("complemento"));
                 municipio.setText(objCon.rs.getString("municipio"));
                 estado.setText(objCon.rs.getString("estado"));
                 latitude.setText(objCon.rs.getString("latitude"));
                 longitude.setText(objCon.rs.getString("longitude"));
                 divisa.setText(objCon.rs.getString("divisa"));
            }
            
         }catch(SQLException ex) {
             Logger.getLogger(JIFPropriedades.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Propriedade Não Foi Editada Corretamente");
         }finally {
            objCon.closeConnectionMySql(objCon.con, objCon.stmt);
        }
    }
    
    public void jbActionExcluir() {
         int excluirProp = objPropriedades.getRow();
         
         try {
            objCon.openConnectionMySql();
            objCon.stmt = objCon.con.createStatement();
            
            SQL = "DELETE FROM bd_jifpropriedades WHERE codigo ="+(excluirProp+1);
            
            objCon.stmt.executeUpdate(SQL);
            
            JOptionPane.showMessageDialog(null, "Propriedade excluida com Sucesso");
            
         }catch(SQLException ex) {
             Logger.getLogger(JIFPropriedades.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Propriedade Não Foi Excluida Corretamente");
         } finally {
            objCon.closeConnectionMySql(objCon.con, objCon.stmt);
        }
    }
    
    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        //Utiliza o JPanel acima, busca no banco de dados e exclui o registro (tabela)
       objPropriedades.showJFPropriedades(this);
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jftEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftEstoqueActionPerformed

    private void cepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cepActionPerformed

    private void sim_manancialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sim_manancialActionPerformed
        if(sim_manancial.isEnabled()) {
           largura_manancial.setEnabled(true);
           nao_manancial.setEnabled(false);
        }
    }//GEN-LAST:event_sim_manancialActionPerformed

    private void nao_manancialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nao_manancialActionPerformed
       if(nao_manancial.isEnabled()) {
           largura_manancial.setEnabled(false);
           sim_manancial.setEnabled(false);
       } else {
           largura_manancial.setEnabled(true);
           sim_manancial.setEnabled(true);
       }
    }//GEN-LAST:event_nao_manancialActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField area_plantada;
    private javax.swing.JTextField area_total;
    private java.util.List<view.BdProprietarios> bdProprietariosList;
    private java.util.List<view.BdProprietarios> bdProprietariosList1;
    private javax.persistence.Query bdProprietariosQuery;
    private javax.persistence.Query bdProprietariosQuery1;
    private javax.swing.JTextField benfeitoria;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cep;
    private javax.swing.JTextField complemento;
    private javax.swing.JTextField divisa;
    private javax.swing.JTextField endereco;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField estado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<Object> jftEstoque;
    private javax.swing.JLabel jlDescricao;
    private javax.swing.JLabel jlEstoque;
    private javax.swing.JLabel jlId;
    private javax.swing.JLabel jlId2;
    private javax.swing.JTextField jtDescricao;
    private javax.swing.JTextField largura_manancial;
    private javax.swing.JTextField latitude;
    private javax.swing.JTextField longitude;
    private javax.swing.JTextField municipio;
    private javax.swing.JRadioButton nao_manancial;
    private javax.swing.JTextField nirf;
    private javax.swing.JRadioButton sim_manancial;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public void limparCampos(){
        jtDescricao.setText(null);
        nirf.setText(null);
        area_total.setText(null);
        area_plantada.setText(null);
        largura_manancial.setText(null);
        benfeitoria.setText(null);
        endereco.setText(null);
        cep.setText(null);
        complemento.setText(null);
        municipio.setText(null);
        estado.setText(null);
        latitude.setText(null);
        longitude.setText(null);
        divisa.setText(null);
        //jftEstoque.setText(null);
    }
    
    public void tratarCampos(boolean t){
        jtDescricao.setEnabled(t);
        jftEstoque.setEnabled(t);
    }
    
    public boolean validarCampos(){
        if(jtDescricao.getText().equals("")){
           JOptionPane.showMessageDialog(this, "Digite a descrição");
           jtDescricao.requestFocus();
           return false; 
        }
        
        if(jtDescricao.getText().length()>50){
           JOptionPane.showMessageDialog(this, 
                   "Descrição muito longa");
           jtDescricao.requestFocus();
           return false;  
        }
        
        if(String.valueOf(jftEstoque.getSelectedIndex()).equals("")){
            JOptionPane.showMessageDialog(this, "Digite o estoque");
            jftEstoque.requestFocus();
            return false;  
        } 
        
        else { 
            try{
                float estoque = (jftEstoque.getSelectedIndex());
                if(estoque<=0){
                    JOptionPane.showMessageDialog(this, "Estoque inválido");
                    return false;
                }
                
            }catch(Exception ex){ 
                JOptionPane.showMessageDialog(this, 
                        "Estoque deve ser numérico");
            return false;
            }
        }
        /*if(jftPreco.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Digite o preço");
            jftPreco.requestFocus();
            return false;  } else { 
            try{
                float preco = Float.parseFloat(jftPreco.getText());
                if(preco<=0){
                    JOptionPane.showMessageDialog(this, "Preço inválido");
                    return false;}
            }catch(Exception erro){ 
                JOptionPane.showMessageDialog(this, 
                        "Preço deve ser numérico");
            return false;}}
        if(jcbSituacao.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Selecione a situação");
            jcbSituacao.requestFocus();
            return false;  }
        */
        return true;
    }
    
public boolean preencherObjeto() throws Exception {
   // jlId2.setText(String.valueOf(id_iteracao));
    obj.setDescricao(jtDescricao.getText());
    obj.setProprietario(String.valueOf(jftEstoque.getSelectedIndex()));
    /*obj.setPreco(Float.parseFloat(jftPreco.getText()));
    obj.setSituacao(new Situacao(jcbSituacao.getSelectedIndex(),
             jcbSituacao.getSelectedItem().toString()));
             */
    return true;
    }
}
