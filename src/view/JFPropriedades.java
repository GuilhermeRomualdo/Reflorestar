/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.ConexaoMySQL;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author Guilherme
 */
public class JFPropriedades extends javax.swing.JPanel {
    
    ConexaoMySQL objCon = new ConexaoMySQL();
    String SQL;
    JFrame f = new JFrame();
    private JIFPropriedades janelaChamou;
    private JFPrincipal objprincipal;
    public int Row;
    public boolean rowSelected = false;
    /**
     * Creates new form JFPropriedades
     */
    public JFPropriedades() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("bd_reflorestar?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        bdJifpropriedadesQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT b FROM BdJifpropriedades b");
        bdJifpropriedadesList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : bdJifpropriedadesQuery.getResultList();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        jTextField1.setText(" Pesquise...");

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setRowSelectionAllowed(true);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, bdJifpropriedadesList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigo}"));
        columnBinding.setColumnName("Codigo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${descricao}"));
        columnBinding.setColumnName("Descricao");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${proprietario}"));
        columnBinding.setColumnName("Proprietario");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${estado}"));
        columnBinding.setColumnName("Estado");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precoRefl}"));
        columnBinding.setColumnName("Preco Refl");
        columnBinding.setColumnClass(Float.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Ok");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(0, 375, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(370, 370, 370))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents
    
    /*public void showJFPropriedades(JFPrincipal principal) {
        this.objprincipal = principal;
        setVisible(true);
    } */
    
    public void showJFPropriedades(JIFPropriedades janela) {
        this.janelaChamou = janela;
       /*setVisible(true);*/
       f.getContentPane().add(this); // ContentPane
       f.pack(); // para exibir o frame deve-se
       f.setVisible(true); // pack+setVisible
        //objprincipal.jdpPrincipal.add(janela);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setRow(jTable1.getSelectedRow());
        System.out.println(Row);
        if(janelaChamou.editing) {
            janelaChamou.jbActionEditar();
        } else {
            janelaChamou.jbActionExcluir();
        }
        f.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    public void setJanelaChamou(JIFPropriedades janela) {
        this.janelaChamou = janela;
    }
    
    public void setRow(int Row) {
        this.Row = Row;
    }
    
    public int getRow() {
        return Row;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            objCon.openConnectionMySql();
            objCon.stmt = objCon.con.createStatement();
            
            boolean number;
            double value;
            
            try {
                value = (Double.parseDouble(jTextField1.getText()));
                number = true;
            } catch (NumberFormatException e) {	  
                number = false;
            }
                
            if(number)
                SQL = "SELECT * FROM bd_jifpropriedades WHERE codigo LIKE '"+jTextField1.getText()+"%'";
            else
                SQL = "SELECT * FROM bd_jifpropriedades WHERE descricao LIKE '"+jTextField1.getText()+"%'";
            
            objCon.rs = objCon.stmt.executeQuery(SQL);
            //Seleciona a primeira linha do banco
            //objCon.rs.getStatement();
            
            
            
        }catch(SQLException ex) {
            Logger.getLogger(JIFPropriedades.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Tabela n√£o pode ser exibida!");
        } finally {
            objCon.closeConnectionMySql(objCon.con, objCon.stmt);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<view.BdJifpropriedades> bdJifpropriedadesList;
    private javax.persistence.Query bdJifpropriedadesQuery;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
